yash

Lab-10  MongoDb

1. Update the age of John's to 31.
db.student.updateOne({name:"John"},{$set:{age:31}})


2. Update the city of all students from 'New York' to 'New Jersey'.
db.student.updateMany({city:"New York"},{$set:{city:"New Jersey"}})

3. Set isActive to false for every student older than 35.
db.student.updateMany({age:{$gt:35}},{$set:{isActive:false}})

4. Increment the age of all students by 1 year.
db.student.updateMany({},{$inc:{age:1}})

5. Set the city of 'Eva' to 'Cambridge'.
db.student.updateMany({name:"Eva"},{$set:{city:"Cambridge"}})

6. Update 'Sophia's isActive status to false.
db.student.updateMany({name:"Sophia",{$set:{isActive:false}})

7. Update the city field of student aged below 30 to 'San Diego'.
db.student.updateMany({age:{$lt:30}},{$set:{city:"San Diego"}})

8. Rename the age field to years for all documents.
db.student.updateMany({},{$rename:{"age":"years"}})

9. Update 'Nick' to make him active (isActive = true).
db.student.updateMany({name:"Nick"},{$set:{isActive:true}})

10. Update all documents to add a new field country with the value 'USA'.
db.student.updateMany({},{$set:{country:"USA"}})

11. Update 'David's city to 'Orlando'.
db.student.updateMany({name:"David"},{$set:{city:"Orlando"}})

12. Multiply the age of all students by 2.
db.student.updateMany({},{$mul:{years:2}})

13. Unset (remove) the city field for 'Tom'.
db.student.updateMany({name:"Tom"},{$unset:{city:""}})

14. Add a new field premiumUser and to true for users older than 30.
db.student.updateMany({years:{$gt:30}},{$set:{premiumUser:true}})

15. Set isActive to true for 'Jane'.
db.student.updateMany({name:"Jane"},{$set:{isActive:true}})

16. Update isActive field of 'Lucy' to false.
db.student.updateMany({name:"Lucy"},{$set:{isActive:true}})

17. Delete a document of 'Nick' from the collection.
db.student.deleteOne({name:"Nick"})

18. Delete all students who are inactive (isActive = false).
db.student.deleteMany({isActive:false})

19. Delete all students who live in 'New York'.
db.student.deleteMany({city:'New York'})

20. Delete all the students aged above 35.
db.student.deleteMany({years:{$gt:35}})

21. Delete a student named ''Olivia'' from the collection.
db.student.deleteMany({name:"Olivia"})

22. Delete all the students whose age is below 25.
db.student.deleteMany({age:{$lt:25}})

23. Delete the first student whose isActive field is true.
db.student.deleteOne({isActive:true})

24. Delete all students from 'Los Angeles'.
db.student.deleteMany({city:"Los Angeles"})

25. Delete all students who have city field missing.
db.student.deleteMany({city:{$exists:false}})

26. Rename 'city' field to 'location' for all documents.
db.student.updateMany({},{$rename:{"city":"location"}})

27. Rename the name field to FullName for 'John'.
db.student.updateMany({name:"John"},{$rename:{"name":"FullName"}})

28. Rename the isActive field to status for all documents.
db.student.updateMany({},{$rename:{"isActive":"status"}})

29. Rename age to yearsOld for everyone from 'San Francisco' student only.
db.student.updateMany({location:"San Francisco"},{$rename:{"age":"yearsOld"}})

30. Create a Capped Collection named “Employee” as per follows:
a. Ecode and Ename are compulsory fields
b. Datatype of EID is int, Ename is string, Age is int and City is string
Insert following documents into above “Employee” collection.

db.createCollection("Employee",{
capped:true,
size:5120,
max:100,
validator:{
$jsonSchema:{
bsonType:"object",
required:["Ecode","Ename"],
properties:{
Ecode:{bsonType:"int"},
Ename:{bsonType:"string"},
Age:{bsonType:"int"},
City:{bsonType:"string"},

}
}
}
})





--------------------B--------------------------

1. Display Female students and belong to Rajkot city.
db.Student_data.find({$and:[{GENDER:"Female"},{CITY:"Rajkot"}]})

2. Display students not studying in 3rd sem.
3. Display students whose city is Jamnagar or Baroda. (use: IN)
4. Display first 2 students names who lives in Baroda.
5. Display Male students who studying in 3rd sem.
6. Display sname and city and fees of those students whose roll no is less than 105.
7. Update City of all students from 'Jamnagar' City and Department as 'CE' to 'Surat'.
8. Increase Fees by 500 where the Gender is not 'Female'. (Use: Not)
9. Set the Department of all students from 'EE' and in Sem 3 to 'Electrical'.
10. Update the Fees of students in 'Rajkot' who are male.
11. Change City to 'Vadodara' for students in Sem 5 and with fees less than 10000.
12. Delete all students where the City is 'Ahmedabad' or GENDER is 'Male'.
13. Delete students whose Rollno is not in the list [101, 105, 110].
14. Delete students from the 'Civil' department who are in Sem 5 or Sem 7.
15. Delete all students who are not in the cities 'Rajkot', 'Baroda', or 'Jamnagar'.
16. Delete students whose Rollno is between 105 and 108.
17. Rename the City field to LOCATION for all students.
18. Rename the Department field to Branch where the Fees is less than 10000.
19. Rename Sname to Fullname for students with Rollno in [106, 107, 108].
20. Rename Fees to Tuition_Fees for all students with Fees greater than 9000.
21. Rename Department to Major where the Fees is less than 15000 and Gender is 'Female'.
22. Rename City to Hometown for all students whose SEM is 3 and Department is not 'Mechanical'
